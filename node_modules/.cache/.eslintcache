[{"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\index.js":"1","C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\reportWebVitals.js":"2","C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\App.js":"3","C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\Home.js":"4","C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\PokeDex.js":"5"},{"size":517,"mtime":1651295794000,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1651281080000,"results":"8","hashOfConfig":"7"},{"size":412,"mtime":1651761710000,"results":"9","hashOfConfig":"7"},{"size":1003,"mtime":1651761710000,"results":"10","hashOfConfig":"7"},{"size":16489,"mtime":1651818935539,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13bq0r3",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\index.js",[],"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\reportWebVitals.js",[],"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\App.js",[],"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\Home.js",["23","24","25","26","27"],"C:\\Users\\tecky\\OneDrive\\Desktop\\react-js-coding-test-level-1\\src\\PokeDex.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Collapse,\r\n  Pagination,\r\n  Input,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Tag,\r\n  Table,\r\n} from \"antd\";\r\nimport {\r\n  SearchOutlined,\r\n  SortAscendingOutlined,\r\n  RiseOutlined,\r\n  ToTopOutlined,\r\n  ColumnHeightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart } from \"chart.js/auto\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst { Panel } = Collapse;\r\nconst { Option } = Select;\r\nconst { Column } = Table;\r\n\r\nconst baseUrl = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nfunction PokeDex() {\r\n  const [allPokemonsData, setAllPokemonsData] = useState([]);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [currentPageStartingItem, setCurrentPageStartingItem] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sortingMode, setSortingMode] = useState(\"byname\");\r\n\r\n  const [pokemonDetail, setPokemonDetail] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      background: \"black\",\r\n      color: \"white\",\r\n    },\r\n    overlay: { backgroundColor: \"grey\" },\r\n  };\r\n\r\n  const totalPokemonsNumber = 1126;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(baseUrl, {\r\n        params: {\r\n          limit: totalPokemonsNumber,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        res?.data?.results.map(async (data) => {\r\n          await axios.get(data.url).then((responses) => {\r\n            setAllPokemonsData((prev) => [...prev, responses]);\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    allPokemonsData.length == totalPokemonsNumber && setIsLoading(true);\r\n  }, [allPokemonsData]);\r\n\r\n  useEffect(() => {\r\n    setPokemons(allPokemonsData);\r\n\r\n    const filteredPokes = allPokemonsData.filter((pokemon) => {\r\n      return pokemon?.data?.name.includes(filterText);\r\n    });\r\n\r\n    switch (sortingMode) {\r\n      case \"byname\":\r\n        filteredPokes.sort((a, b) => {\r\n          return a?.data?.name.localeCompare(b?.data?.name);\r\n        });\r\n        break;\r\n      case \"baseexperience\":\r\n        filteredPokes.sort((a, b) => {\r\n          return a?.data?.base_experience - b?.data?.base_experience;\r\n        });\r\n        break;\r\n      case \"weight\":\r\n        filteredPokes.sort((a, b) => {\r\n          return a?.data?.weight - b?.data?.weight;\r\n        });\r\n        break;\r\n      case \"height\":\r\n        filteredPokes.sort((a, b) => {\r\n          return a?.data?.height - b?.data?.height;\r\n        });\r\n        break;\r\n    }\r\n\r\n    setPokemons(\r\n      filteredPokes.slice(\r\n        currentPageStartingItem,\r\n        currentPageStartingItem + pageSize,\r\n      ),\r\n    );\r\n  }, [\r\n    filterText,\r\n    allPokemonsData,\r\n    currentPageStartingItem,\r\n    pageSize,\r\n    sortingMode,\r\n  ]);\r\n\r\n  //Tag color based on pokemon type(s)\r\n  const typesChecker = (pokemonType) => {\r\n    switch (pokemonType) {\r\n      case \"bug\":\r\n        return \"#a8b820\";\r\n        break;\r\n      case \"dark\":\r\n        return \"#705848\";\r\n        break;\r\n      case \"dragon\":\r\n        return \"#7038f8\";\r\n        break;\r\n      case \"electric\":\r\n        return \"#f8d030\";\r\n        break;\r\n      case \"fairy\":\r\n        return \"#ee99ac\";\r\n        break;\r\n      case \"fighting\":\r\n        return \"#c03028\";\r\n        break;\r\n      case \"fire\":\r\n        return \"#f08030\";\r\n        break;\r\n      case \"flying\":\r\n        return \"#a890f0\";\r\n        break;\r\n      case \"ghost\":\r\n        return \"#705898\";\r\n        break;\r\n      case \"grass\":\r\n        return \"#78c850\";\r\n        break;\r\n      case \"ground\":\r\n        return \"#e0c068\";\r\n        break;\r\n      case \"ice\":\r\n        return \"#98d8d8\";\r\n        break;\r\n      case \"normal\":\r\n        return \"#a8a878\";\r\n        break;\r\n      case \"poison\":\r\n        return \"#a040a0\";\r\n        break;\r\n      case \"psychic\":\r\n        return \"#f85888\";\r\n        break;\r\n      case \"rock\":\r\n        return \"#b8a038\";\r\n        break;\r\n      case \"steel\":\r\n        return \"#b8b8d0\";\r\n        break;\r\n      case \"water\":\r\n        return \"#6890f0\";\r\n        break;\r\n    }\r\n  };\r\n\r\n  // if (!isLoading && pokemons.length === 0) {\r\n  //   return (\r\n  //     <div>\r\n  //       <header className='App-header'>\r\n  //         <h1>Welcome to pokedex !</h1>\r\n  //         <h2>Requirement:</h2>\r\n  //         <ul>\r\n  //           <li>\r\n  //             Call this api:https://pokeapi.co/api/v2/pokemon to get pokedex,\r\n  //             and show a list of pokemon name.\r\n  //           </li>\r\n  //           <li>Implement React Loading and show it during API call</li>\r\n  //           <li>\r\n  //             when hover on the list item , change the item color to yellow.\r\n  //           </li>\r\n  //           <li>when clicked the list item, show the modal below</li>\r\n  //           <li>\r\n  //             Add a search bar on top of the bar for searching, search will run\r\n  //             on keyup event\r\n  //           </li>\r\n  //           <li>Implement sorting and pagingation</li>\r\n  //           <li>Commit your codes after done</li>\r\n  //           <li>\r\n  //             If you do more than expected (E.g redesign the page / create a\r\n  //             chat feature at the bottom right). it would be good.\r\n  //           </li>\r\n  //         </ul>\r\n  //       </header>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  const handlePrint = (divClassName, picture) => {\r\n    html2canvas(document.querySelector(`.${divClassName}Container`), {\r\n      quality: 4,\r\n      scale: 4,\r\n    }).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"l\", \"px\", \"a4\", \"false\");\r\n      const width = pdf.internal.pageSize.getWidth() - 20;\r\n      const height = pdf.internal.pageSize.getHeight() - 160;\r\n      pdf.addImage(imgData, \"PNG\", 10, 50, width, height);\r\n      const img = new Image(200, 200);\r\n      img.src = picture;\r\n      pdf.addImage(img, \"PNG\", 30, 90);\r\n      pdf.save(`${divClassName}.pdf`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className='App-header'>\r\n        {!isLoading ? (\r\n          <>\r\n            <div className='App'>\r\n              <header className='App-header'>\r\n                <ReactLoading\r\n                  type='spin'\r\n                  color='white'\r\n                  height={200}\r\n                  width={200}\r\n                />\r\n              </header>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1 style={{ color: \"white\" }}>Welcome to pokedex!</h1>\r\n            <div className='navigation_container'>\r\n              <div className='filter_input dummy-box'></div>\r\n              <Input\r\n                className='pokemon_filter_input'\r\n                style={{ color: \"black\" }}\r\n                type='text'\r\n                prefix={<SearchOutlined />}\r\n                placeholder='Search pokemon'\r\n                onChange={(e) => {\r\n                  setFilterText(e.target.value);\r\n                  setCurrentPage(1);\r\n                  setCurrentPageStartingItem(0);\r\n                }}\r\n              />\r\n              <div className='filter_input'>\r\n                <Select\r\n                  showSearch\r\n                  placeholder='Sort by'\r\n                  onChange={(e) => {\r\n                    setSortingMode(e);\r\n                    setCurrentPage(1);\r\n                    setCurrentPageStartingItem(0);\r\n                  }}>\r\n                  <Option value='byname'>\r\n                    <SortAscendingOutlined /> By Name\r\n                  </Option>\r\n                  <Option value='baseexperience'>\r\n                    <ToTopOutlined /> Base Experience\r\n                  </Option>\r\n                  <Option value='height'>\r\n                    <ColumnHeightOutlined /> By Height\r\n                  </Option>\r\n                  <Option value='weight'>\r\n                    <RiseOutlined /> By Weight\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            {pokemons.map((pokemon) => (\r\n              <Collapse\r\n                className={pokemon?.data?.name + \"Container\"}\r\n                accordion\r\n                style={{ width: \"min(95vw, 1000px)\" }}\r\n                key={\"collapse\" + pokemon?.data?.name}>\r\n                <Panel\r\n                  header={pokemon?.data?.name.toUpperCase()}\r\n                  key={\"panelkey\" + pokemon?.data?.name}>\r\n                  <div>\r\n                    <Row>\r\n                      <Col md={3} xs={6}>\r\n                        <div className='pokemon-identity-wrapper'>\r\n                          <Row>\r\n                            <img\r\n                              src={pokemon?.data?.sprites?.front_default}\r\n                              style={{ marginBottom: 6 }}\r\n                            />\r\n                          </Row>\r\n                          <Row>\r\n                            {pokemon?.data?.types.map((eachType) => (\r\n                              <Tag\r\n                                style={{ marginTop: 4 }}\r\n                                key={pokemon?.data?.name + eachType?.type?.name}\r\n                                color={typesChecker(eachType?.type?.name)}>\r\n                                {eachType?.type?.name}\r\n                              </Tag>\r\n                            ))}\r\n                          </Row>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={7} xs={17} offset={1}>\r\n                        <div style={{ marginBottom: 16 }}>\r\n                          <Table\r\n                            pagination={false}\r\n                            size='small'\r\n                            dataSource={[\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[0]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[0]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[0]?.base_stat,\r\n                              },\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[1]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[1]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[1]?.base_stat,\r\n                              },\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[2]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[2]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[2]?.base_stat,\r\n                              },\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[3]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[3]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[3]?.base_stat,\r\n                              },\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[4]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[4]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[4]?.base_stat,\r\n                              },\r\n                              {\r\n                                key:\r\n                                  pokemon?.data?.name +\r\n                                  pokemon?.data?.stats[5]?.stat?.name,\r\n                                statsName: pokemon?.data?.stats[5]?.stat?.name,\r\n                                baseValue: pokemon?.data?.stats[5]?.base_stat,\r\n                              },\r\n                            ]}>\r\n                            <Column title='Stat Name' dataIndex='statsName' />\r\n                            <Column title='Base Value' dataIndex='baseValue' />\r\n                          </Table>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={12} xs={23} offset={1}>\r\n                        <Row>\r\n                          <Col span={24}>\r\n                            <Bar\r\n                              options={{\r\n                                aspectRatio: 1.5,\r\n                                indexAxis: \"y\",\r\n                                elements: {\r\n                                  bar: {\r\n                                    borderWidth: 2,\r\n                                  },\r\n                                },\r\n                                scales: {\r\n                                  xAxes: {\r\n                                    ticks: {\r\n                                      autoSkip: false,\r\n                                      source: \"data\",\r\n                                    },\r\n                                  },\r\n                                },\r\n                              }}\r\n                              data={{\r\n                                labels: pokemon?.data?.stats.map(\r\n                                  (eachStat) => eachStat?.stat?.name,\r\n                                ),\r\n                                datasets: [\r\n                                  {\r\n                                    label: \"Base Stats\",\r\n                                    data: pokemon?.data?.stats.map(\r\n                                      (eachStat) => eachStat?.base_stat,\r\n                                    ),\r\n                                  },\r\n                                ],\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row justify='end' style={{ marginTop: 16 }}>\r\n                          <button\r\n                            onClick={() =>\r\n                              handlePrint(\r\n                                pokemon?.data?.name,\r\n                                pokemon?.data?.sprites?.front_default,\r\n                              )\r\n                            }>\r\n                            Save as pdf\r\n                          </button>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            ))}\r\n\r\n            <Pagination\r\n              className='pagination'\r\n              total={totalPokemonsNumber}\r\n              defaultPageSize={20}\r\n              defaultCurrent={1}\r\n              current={currentPage}\r\n              onChange={(page, pageSize) => {\r\n                setCurrentPage(page);\r\n                setPageSize(pageSize);\r\n                setCurrentPageStartingItem((page - 1) * pageSize);\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </header>\r\n\r\n      {/* {!pokemonDetail && (\r\n        <Modal\r\n          isOpen={pokemonDetail}\r\n          contentLabel={pokemonDetail?.name || \"\"}\r\n          onRequestClose={() => {\r\n            setPokemonDetail(null);\r\n          }}\r\n          style={customStyles}>\r\n          <div>\r\n            Requirement:\r\n            <ul>\r\n              <li>show the sprites front_default as the pokemon image</li> DONE\r\n              <li>\r\n                Show the stats details - only stat.name and base_stat is\r\n                required in tabular format\r\n              </li>\r\n              <li>Create a bar chart based on the stats above</li>\r\n              <li>\r\n                Create a buttton to download the information generated in this\r\n                modal as pdf. (images and chart must be included)\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Modal>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokeDex;\r\n",{"ruleId":"54","severity":1,"message":"55","line":2,"column":20,"nodeType":"56","messageId":"57","endLine":2,"endColumn":29},{"ruleId":"54","severity":1,"message":"58","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":17},{"ruleId":"54","severity":1,"message":"59","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"60","line":6,"column":16,"nodeType":"56","messageId":"57","endLine":6,"endColumn":23},{"ruleId":"54","severity":1,"message":"61","line":7,"column":19,"nodeType":"56","messageId":"57","endLine":7,"endColumn":29},{"ruleId":"54","severity":1,"message":"62","line":23,"column":10,"nodeType":"56","messageId":"57","endLine":23,"endColumn":15},{"ruleId":"54","severity":1,"message":"63","line":42,"column":10,"nodeType":"56","messageId":"57","endLine":42,"endColumn":23},{"ruleId":"54","severity":1,"message":"64","line":42,"column":25,"nodeType":"56","messageId":"57","endLine":42,"endColumn":41},{"ruleId":"54","severity":1,"message":"65","line":45,"column":9,"nodeType":"56","messageId":"57","endLine":45,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":81,"column":28,"nodeType":"68","messageId":"69","endLine":81,"endColumn":30},{"ruleId":"70","severity":1,"message":"71","line":91,"column":5,"nodeType":"72","messageId":"73","endLine":112,"endColumn":6},{"ruleId":"70","severity":1,"message":"71","line":130,"column":5,"nodeType":"72","messageId":"73","endLine":185,"endColumn":6},{"ruleId":"74","severity":1,"message":"75","line":133,"column":9,"nodeType":"76","messageId":"77","endLine":133,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":136,"column":9,"nodeType":"76","messageId":"77","endLine":136,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":139,"column":9,"nodeType":"76","messageId":"77","endLine":139,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":142,"column":9,"nodeType":"76","messageId":"77","endLine":142,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":145,"column":9,"nodeType":"76","messageId":"77","endLine":145,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":148,"column":9,"nodeType":"76","messageId":"77","endLine":148,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":151,"column":9,"nodeType":"76","messageId":"77","endLine":151,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":154,"column":9,"nodeType":"76","messageId":"77","endLine":154,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":157,"column":9,"nodeType":"76","messageId":"77","endLine":157,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":160,"column":9,"nodeType":"76","messageId":"77","endLine":160,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":163,"column":9,"nodeType":"76","messageId":"77","endLine":163,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":166,"column":9,"nodeType":"76","messageId":"77","endLine":166,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":169,"column":9,"nodeType":"76","messageId":"77","endLine":169,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":172,"column":9,"nodeType":"76","messageId":"77","endLine":172,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":175,"column":9,"nodeType":"76","messageId":"77","endLine":175,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":178,"column":9,"nodeType":"76","messageId":"77","endLine":178,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":181,"column":9,"nodeType":"76","messageId":"77","endLine":181,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":184,"column":9,"nodeType":"76","messageId":"77","endLine":184,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":308,"column":29,"nodeType":"80","endLine":311,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'setIsReady' is assigned a value but never used.","'Chart' is defined but never used.","'pokemonDetail' is assigned a value but never used.","'setPokemonDetail' is assigned a value but never used.","'customStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
