{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-js-coding-test-level-1\\\\src\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    data,\n    query,\n    pageLimit,\n    dataLimit,\n    showModel\n  } = _ref;\n  const [pages] = useState(Math.round(data.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function goToNextPage() {\n    setCurrentPage(page => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage(page => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [getPaginatedData().filter(poke => {\n      if (query === '') {\n        return poke;\n      } else if (poke.name.toLowerCase().includes(query.toLowerCase())) {\n        return poke;\n      }\n    }).map((_ref2, index) => {\n      let {\n        name,\n        url\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"pokemon\",\n        onClick: () => showModel(url),\n        children: name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        className: `prev ${currentPage === 1 ? 'disabled' : ''}`,\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), getPaginationGroup().map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `paginationItem ${currentPage === item ? 'active' : null}`,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        className: `next ${currentPage === pages ? 'disabled' : ''}`,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"TAuAHIRT/chsJ5y/NrRj9/numrE=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-js-coding-test-level-1/src/Pagination.js"],"names":["React","useState","Pagination","data","query","pageLimit","dataLimit","showModel","pages","Math","round","length","currentPage","setCurrentPage","goToNextPage","page","goToPreviousPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","floor","Array","fill","map","_","idx","filter","poke","name","toLowerCase","includes","index","url","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,MAAMC,UAAU,GAAG,QAAsD;AAAA;;AAAA,MAArD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA;AAArC,GAAqD;AACrE,QAAM,CAACC,KAAD,IAAUP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,MAAL,GAAcL,SAAzB,CAAD,CAAxB;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;;AAEA,WAASa,YAAT,GAAwB;AACpBD,IAAAA,cAAc,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd;AACH;;AAED,WAASC,gBAAT,GAA4B;AACxBH,IAAAA,cAAc,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd;AACH;;AAED,WAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,UAAMC,UAAU,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,WAAd,CAAzB;AACAT,IAAAA,cAAc,CAACM,UAAD,CAAd;AACH;;AAED,QAAMI,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,UAAU,GAAGZ,WAAW,GAAGN,SAAd,GAA0BA,SAA7C;AACA,UAAMmB,QAAQ,GAAGD,UAAU,GAAGlB,SAA9B;AACA,WAAOH,IAAI,CAACuB,KAAL,CAAWF,UAAX,EAAuBC,QAAvB,CAAP;AACH,GAJD;;AAMA,QAAME,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,KAAK,GAAGnB,IAAI,CAACoB,KAAL,CAAW,CAACjB,WAAW,GAAG,CAAf,IAAoBP,SAA/B,IAA4CA,SAAxD;AACA,WAAO,IAAIyB,KAAJ,CAAUzB,SAAV,EAAqB0B,IAArB,GAA4BC,GAA5B,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYN,KAAK,GAAGM,GAAR,GAAc,CAA1D,CAAP;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACKX,gBAAgB,GAAGY,MAAnB,CAA0BC,IAAI,IAAI;AAC/B,UAAIhC,KAAK,KAAK,EAAd,EAAkB;AACd,eAAOgC,IAAP;AACH,OAFD,MAEO,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCnC,KAAK,CAACkC,WAAN,EAAjC,CAAJ,EAA2D;AAC9D,eAAOF,IAAP;AACH;AACJ,KANA,EAMEJ,GANF,CAMM,QAAgBQ,KAAhB;AAAA,UAAC;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,OAAD;AAAA,0BACH;AAAG,QAAA,SAAS,EAAC,SAAb;AAAmC,QAAA,OAAO,EAAE,MAAMlC,SAAS,CAACkC,GAAD,CAA3D;AAAA,kBAAmEJ;AAAnE,SAA4BG,KAA5B;AAAA;AAAA;AAAA;AAAA,cADG;AAAA,KANN,CADL,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AACI,QAAA,OAAO,EAAExB,gBADb;AAEI,QAAA,SAAS,EAAG,QAAOJ,WAAW,KAAK,CAAhB,GAAoB,UAApB,GAAiC,EAAG,EAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKe,kBAAkB,GAAGK,GAArB,CAAyB,CAACU,IAAD,EAAOF,KAAP,kBACtB;AAEI,QAAA,OAAO,EAAEvB,UAFb;AAGI,QAAA,SAAS,EAAG,kBAAiBL,WAAW,KAAK8B,IAAhB,GAAuB,QAAvB,GAAkC,IAAK,EAHxE;AAAA,kBAKKA;AALL,SACSF,KADT;AAAA;AAAA;AAAA;AAAA,cADH,CARL,eAkBI;AACI,QAAA,OAAO,EAAE1B,YADb;AAEI,QAAA,SAAS,EAAG,QAAOF,WAAW,KAAKJ,KAAhB,GAAwB,UAAxB,GAAqC,EAAG,EAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAlED;;GAAMN,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./App.css\";\r\n\r\nconst Pagination = ({ data, query, pageLimit, dataLimit, showModel }) => {\r\n    const [pages] = useState(Math.round(data.length / dataLimit));\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    function goToNextPage() {\r\n        setCurrentPage((page) => page + 1);\r\n    }\r\n\r\n    function goToPreviousPage() {\r\n        setCurrentPage((page) => page - 1);\r\n    }\r\n\r\n    function changePage(event) {\r\n        const pageNumber = Number(event.target.textContent);\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    const getPaginatedData = () => {\r\n        const startIndex = currentPage * dataLimit - dataLimit;\r\n        const endIndex = startIndex + dataLimit;\r\n        return data.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const getPaginationGroup = () => {\r\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            {getPaginatedData().filter(poke => {\r\n                if (query === '') {\r\n                    return poke;\r\n                } else if (poke.name.toLowerCase().includes(query.toLowerCase())) {\r\n                    return poke;\r\n                }\r\n            }).map(({ name, url }, index) =>\r\n                <b className=\"pokemon\" key={index} onClick={() => showModel(url)}>{name}</b>\r\n            )}\r\n            <div className=\"pagination\">\r\n                <button\r\n                    onClick={goToPreviousPage}\r\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n                    prev\r\n                </button>\r\n\r\n                {getPaginationGroup().map((item, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={changePage}\r\n                        className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n                    >\r\n                        {item}\r\n                    </button>\r\n                ))}\r\n\r\n                <button\r\n                    onClick={goToNextPage}\r\n                    className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n                >\r\n                    next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}